    forall(b in B)
        donor_up:
            y_don[b] <= y_iab[b];
    forall(c in B, d in B)
        bh_link_act_one:
            z[c][d] <= bh_p_mask[c][d]*y_iab[c];
    forall(c in B, d in B)
        bh_link_act_two:
            z[c][d] <= bh_p_mask[c][d]*y_iab[d];
    forall(t in T, d in B, r in R)
        src_act_one:
            x[t][d][r] <= src_p_mask[t][d][r]*y_iab[d];
    forall(t in T, d in B, r in R)
        src_act_two:
            x[t][d][r] <= src_p_mask[t][d][r]*y_ris[r];
    forall(t in T)
        one_src_x_tp:
            sum(d in B, r in R)(x[t][d][r]) == 1;
    forall(c in B)
        tree_topology:
            sum(d in B)(z[d][c]) <= 1-y_don[c];
    forall(t in T)
        angsep_tp:
            angsep_var[t] == sum(d in B, r in R)(angsep[t][d][r]*x[t][d][r]);
    forall(t in T)
        linlen_tp:
            linlen_var[t] == sum(d in B, r in R)(x[t][d][r]*linlen[t][d][r]);
    fix_donor:
            y_don[donor_id] >= 1;
